<script>
  const viewImage = () =>{
    $('.viewImage-cont').css('display','block');
  };
   const viewUserImage = (img,i) =>{
    $('.viewImage-cont').css('display','block');
    $('img.user').css('display','none');
    $('img.pal').css('display','block');
    $('.view-image').append(`
    <img class="pal s${i}" src="${img}" alt="a user"/>
    `);
  };
   $('button.pal-close').on('click',()=>{
    $('.viewImage-cont').css('display','none');
    $('img.user').css('display','block');
    $('img.pal').remove();
   })

  $('.view-contents button').on('click',()=>{
    $('.viewImage-cont').css('display','none');
  });
  document.addEventListener('DOMContentLoaded',()=>{
  LoadChats(1);
})
  const body = document.querySelector('section')
  const instance = M.Tabs.init(document.querySelector('.tabs'));
    M.updateTextFields();
  const elems = document.querySelectorAll('.dropdown-trigger');
  const instancess = M.Dropdown.init(elems);
    var collapsible= document.querySelectorAll('.collapsible');
    var col = M.Collapsible.init(collapsible);
  const elemss = document.querySelectorAll('.modal');
  const instances = M.Modal.init(elemss);

const showIndicator = ()=>{
$('#bg').css('display','block');
$('.upload-modal').css('display','flex');
$('.modal-upload').css('display','flex');
$('.preloader-wrapper').css('display','block');
$('input[type="file"]').val('')
}
const hideIndicator = () =>{
$('.upload-modal').css('display','none');
$('.modal-upload').css('display','none');
$('.upload-error').css('display','none');
$('.preloader-wrapper').css('display','none');
$('#bg').css('display',`none`);
$('input[type="file"]').val('')
}
const LoadChats = (page) =>{
  const token =  $('input[name="_csrf"]').val();
  $('.loading').css('display','block')
  fetch(`/getprofilechats?page=${page}`, {
    method: 'GET',
    credentials:'include',
      headers: {
        "csrf-token":token,
      },
}).then(res=>res.json())
.then(res=>{
  $('.collection').html('');
  hideIndicator();
  $('.next').remove();
  $('.prev').remove();
  $('.loading').css('display','none')
  $('#badge').text(res.total)
   if(res.chats.length > 0) {
     $('.new').css('display','none')
     if(res.hasNext){
       $('.pages').append(`<button onclick="loadmore('${res.next}')" class="next">Next</button>`)
     //  $('.next').attr('href',`/getprofilechats?page=${res.next}`)
     }
     if(res.hasPrev){
      $('.pages').prepend(`<button onclick="loadmore('${res.prev}')" class="prev">Prev</button>`)
     // $('.prev').css('display','inline-block')
      //$('.prev').attr('href',`/getprofilechats?page=${res.prev}`)
     }
     if(res.code === 404){
      $('.loading').css('display','none')
      $('.collection').append(`
     <div class="new"><h3>${( res.message)}</h3></div>
`) 
     }
    res.chats.forEach((user,i)=>{ 
    $('.collection').append(`
    <form method="POST" action="/removeachat">
    <input type="hidden" value="${token}" name="_csrf">   
    <input type="hidden" value="${user._id}" name="uid">
    <li class="collection-item avatar">
    <img src="${user.img}" onclick="viewUserImage('${user.img}',${i})"  alt="${user.name}" class="circle">
    <span class="title">${user.name}</span>
    <p>${( user.desc)} <br>
    </p>
    <div class="btncont secondary-content">
        <a href="/chat/${user._id}" class="z-depth-1">
          <i class="material-icons">near_me</i>
          <div class="ui">chat</div>
          </a>
        <a href="#" onclick="removeHandler(this,'dom')" 
        data-target="modal1" class="z-depth-1 btn modal-trigger">
        <i class="material-icons">delete</i>
        <div class="ui">del</div>
        </a>
      </div>
  </li></form>
    `)
})
   }else{
     $('.collection').append(`
     <div class="new"><h3>No chats yet</h3></div>
`)
   }
})
}
const  loadmore = (n) => {
  showIndicator();
  LoadChats(n);
}
  const Handler = (e, inputedit) => {
    if (inputedit === "name") {
      document.querySelector('#name').disabled = false;
      nameCancel.style.display = "inline-block";
      nameDone.style.display = "inline-block";
      e.style.display = "none";
    }
    else if (inputedit === "phone") {
      document.querySelector('#phone').disabled = false;
      phoneCancel.style.display = "inline-block";
      phoneDone.style.display = "inline-block";
      e.style.display = "none";
    }
    else if (inputedit === "email") {
      document.querySelector('#email').disabled = false;
      emailCancel.style.display = "inline-block";
      emailDone.style.display = "inline-block";
      e.style.display = "none";
    }
    else if (inputedit === "desc") {
      document.querySelector('#desc').disabled = false;
      descCancel.style.display = "inline-block";
      descDone.style.display = "inline-block";
      e.style.display = "none";
    }      
    else if (inputedit === "chat") {
      document.querySelector('#chat').disabled = false;
      chatCancel.style.display = "inline-block";
      chatDone.style.display = "inline-block";
      e.style.display = "none";
    }      
    else if (inputedit === "anonymous") {
      document.querySelector('#anonymous').disabled = false;
      anonymousCancel.style.display = "inline-block";
      anonymousDone.style.display = "inline-block";
      e.style.display = "none";
    }
  }

  let timer;
  const socket = io();
  
  socket.on('disconnect', (reason) => {
    //refresh browser if server socket disconnects
   if(reason === 'transport close'){
    timer = setTimeout(()=>{
    alert('underlying connection lost please reload')
    },4000)
   } 
  });
socket.on('connect', () => {
clearTimeout(timer)
});

  nameDone.addEventListener('click', () => {
    showIndicator()
    const newName = document.querySelector('#name').value;
    socket.emit('newname', newName, () => {
      hideIndicator()
      document.querySelector('#name').disabled = true;
      document.querySelector('#nameedit').style.display = 'inline-block'
      nameCancel.style.display = "none";
      nameDone.style.display = "none";
      $('.myname').text(newName);
    });
  })

  phoneDone.addEventListener('click', () => {
    document.querySelector('#phoneForm').submit();
      document.querySelector('#phone').disabled = true;
      document.querySelector('#phoneedit').style.display = 'inline-block'
      phoneCancel.style.display = "none";
      phoneDone.style.display = "none";
  })

  descDone.addEventListener('click', () => {
    const newdesc = document.querySelector('#desc').value;
    showIndicator()
    socket.emit('newdesc', newdesc, () => {
      hideIndicator()
      document.querySelector('#desc').disabled = true;
      document.querySelector('#descedit').style.display = 'inline-block'
      descCancel.style.display = "none";
      descDone.style.display = "none";
      $('.small-desc').text(newdesc)
    });
  })
  emailDone.addEventListener('click', () => {
    showIndicator()
    document.querySelector('#emailForm').submit()
      document.querySelector('#email').disabled = true;
      document.querySelector('#emailedit').style.display = 'inline-block'
      emailCancel.style.display = "none";
      emailDone.style.display = "none";
  })    
  chatDone.addEventListener('click', () => {
    const newChat = document.querySelector('#chat').value;
    showIndicator()
    socket.emit('newchat', newChat, (declined) => {
    hideIndicator()
    if(declined){
      //tell user that chat string is already taken
      $('#declined').css('display','block')
    }else{
      $('#declined').css('display','none')
      document.querySelector('#chat').disabled = true;
      document.querySelector('#chatedit').style.display = 'inline-block'
      chatCancel.style.display = "none";
      chatDone.style.display = "none";
    }
    });
  })   
   anonymousDone.addEventListener('click', () => {
    const newAnonymous = document.querySelector('#anonymous').value;
    showIndicator()
    socket.emit('newanonymous', newAnonymous, () => {
      hideIndicator();
      document.querySelector('#anonymous').disabled = true;
      document.querySelector('#anonymousedit').style.display = 'inline-block'
      anonymousCancel.style.display = "none";
      anonymousDone.style.display = "none";
    });
  })

//event listeners for the various modal buttons
const removeHandler = (e,idToRemove)=>{
$('#delete').css('display','none')
$('#yes').css('display','inline-block')
const yes = $('.modal-footer button:nth-child(2)');
yes.on('click',()=>{
showIndicator()
const form = e.parentNode.parentNode.parentNode;
form.submit()
})
}
//script for toggle element
const elemes = document.querySelector('#modal2');
const modal2instance = M.Modal.init(elemes);
const switcher = $('#switch');
const toggler = $('.toggle');
const declineBtn = $('#decline')
const continueBtn = $('#continue')
//const modal2 = M.Modal.getInstance($('#modal2'));

switcher.on('click',()=>{
if(!switcher.attr('checked')){
  return modal2instance.open()
}
showIndicator();
$('#modetoggler').submit()

})
declineBtn.on('click',()=>{
if(switcher.attr('checked')){
  switcher.prop("checked", true);
  modal2instance.close();
}else{
  switcher.prop("checked", false);
 modal2instance.close();
}

})
continueBtn.on('click',()=>{
//continueBtn.text('switching...')
showIndicator()
modal2instance.close();
$('#modetoggler').submit()
})
//script for change password
const changePasswordRevealer = $('.password button');
changePasswordRevealer.on('click',()=>{
$('#cpf').toggleClass('change')
const note = $('.open button').text();
if(note ==='change password'){
  $('.open button').text('close')
}else{
  $('.open button').text('change password')
}
})
 $('.changepassbtn button').on('click',()=>{showIndicator()}) 
const feedString = $('#feedstring');
const feedLink = `${window.location.origin}/sendmsg/${feedString.val()}`;
const feedShareInput = $('#feeds');
const chatLink = $('#chatlink');
feedShareInput.val(feedLink);
const waShare = encodeURIComponent(`Hi, i will like to know what you think about me, don't worry i won't know its you!!!  ${feedLink}`)
document.getElementById('wa-share').href = `https://api.whatsapp.com/send?text=${waShare}`;

//function will dismiss copy notifier
const dismissCopy = ()=>{
$('.notifier').css('visibility','hidden')
}
$('#copy1').on('click',()=>{
/* Select the text field */
const feedShare = document.querySelector('#feeds');
feedShare.focus();
feedShare.select();
feedShare.setSelectionRange(0, 99999);
/* Copy the text inside the text field */
document.execCommand("copy");
$('.notifier').css('visibility','visible')
setTimeout(dismissCopy,1300)

}) 
$('#copy2').on('click',()=>{
/* Select the text field */
const chatShare = document.querySelector('#chatlink');
chatShare.focus();
chatShare.select();
chatShare.setSelectionRange(0, 99999);
/* Copy the text inside the text field */
document.execCommand("copy");
$('.notifier').css('visibility','visible')
setTimeout(dismissCopy,2000)
}) 
//account deleting script
$('.logout.delete button').on('click',()=>{
  const modal = document.querySelector('#modal1');
  $('#delete').css('display','inline-block')
  const yesBtn = $('#yes')
  yesBtn.css('display','none')
  $('#modal1 p').text('Are you sure you want to delete your account?')
  const modal1 = M.Modal.getInstance(modal);
  modal1.open();
  $('#delete').on('click',()=>{
    modal1.close();
    showIndicator();
  })
})
//image upload script
$('.okay').on('click',()=>{
  hideIndicator();
})
$('.open-upload-modal').on('click',()=>{
  $('input[type="file"]').trigger('click');
})
const uploadFile = (file) => {
  showIndicator()
  $('.file-cont input').val('')
if(!['image/jpeg', 'image/gif', 'image/png', 'image/svg+xml'].includes(file.type)) {
  $('.upload-error small').text('File must be an image.')
  $('.upload-error').css('display','block')
   $('.preloader-wrapper').css('display','none')
        return;
    }
    // check file size (< 5MB)
    if(file.size > 5 * 1024 * 1024) {
        $('.upload-error small').text('File must be less than 5MB.')
        $('.preloader-wrapper').css('display','none')
        $('.upload-error').css('display','block')
        return;
    }
const token = $('input[name="_csrf"]').val()
// add file to FormData object
const fd = new FormData();
fd.append('image', file);
// send `POST` request
fetch('/upload', {
    method: 'POST',
    credentials:'include',
      headers: {
        "csrf-token": token,
      },
    body: fd
})
.then(res => res.json())
.then(data =>{ 
if(data.img){
   $('.profilePic').empty();
   const img = new Image();
   img.src = data.img;
   img.classList.add('profilePic');
   hideIndicator() ;
  window.location.reload();
  return
}
$('.preloader-wrapper').css('display','none');
$('.upload-error small').text(data);
$('.upload-error').css('display','block');
})
.catch(err => console.error(err));
}
$('input[type="file"]').on('change',(e)=>{
  const input = document.querySelector('input[type="file"]')
  uploadFile(input.files[0]);
})
</script>
