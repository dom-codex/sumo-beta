<div class="emoticons container">
 <div class="tab-body">
  <div class="tabs">
   <a href="#face" class="link-active material-icons">tag_faces</a>
   <a href="#food" class="material-icons">restaurant_menu</a>
   <a href="#util" class="material-icons">timeline</a>
   <a href="#express" class="material-icons">toys</a>
  </div>
  <div class="tab-content">
   <div id="face" class="emoji"></div>
   <div id="food" class="emoji"></div>
   <div id="util" class="emoji"></div>
   <div id="express" class="emoji"></div>
   <div id="search" class="emoji hide"></div>
  </div>
 </div>
 <div class="emoji-footer">
  <button id="btn-search"type="button">search</button>
  <input type="text"id="esearch"><button class="cancel" type="button">X</button>
 </div>
</div>
<script src="/emoji.js"></script>
<script>
  const insertAtCaret = (text) => {
    var txtarea = document.getElementById('msg');
    var scrollPos = txtarea.scrollTop;
    var strPos = 0;
    var br = ((txtarea.selectionStart || txtarea.selectionStart == '0') ?
      "ff" : (document.selection ? "ie" : false));
    if (br == "ie") {
      txtarea.focus();
      var range = document.selection.createRange();
      range.moveStart('character', -txtarea.value.length);
      strPos = range.text.length;
    }
    else if (br == "ff") strPos = txtarea.selectionStart;

    var front = (txtarea.value).substring(0, strPos);
    var back = (txtarea.value).substring(strPos, txtarea.value.length);
    txtarea.value = front + text + back;
    strPos = strPos + text.length;
    if (br == "ie") {
      txtarea.focus();
      var range = document.selection.createRange();
      range.moveStart('character', -txtarea.value.length);
      range.moveStart('character', strPos);
      range.moveEnd('character', 0);
      range.select();
    }
    else if (br == "ff") {
      txtarea.selectionStart = strPos;
      txtarea.selectionEnd = strPos;
      //	txtarea.focus();
    }
    txtarea.scrollTop = scrollPos;
  }
  const anchors = document.querySelectorAll('.tabs a');

  const reRenderList = () => {
    emojis.forEach(emoji => {
      const p = document.createElement('p');
      p.innerHTML = emoji.code
       p.addEventListener('click', () => {
        insertAtCaret(p.innerHTML)

        //  document.querySelector('#msg').value+= " " + p.innerrHTML;
        M.textareaAutoResize(document.querySelector('#msg'));
      })
      if (emoji.category === 'face') {
        document.querySelector('#face').append(p)
      }
      else if (emoji.category === 'food') {
        document.querySelector('#food').append(p)
      }
      else if (emoji.category === 'util') {
        document.querySelector('#util').append(p)
      }
       else if (emoji.category === 'expression') {
        document.querySelector('#express').append(p)
      }
    })
  }
  //tab indicator script
  const updateIndicator = (e) => {
    const emojiss = document.querySelectorAll('.emoji');
    for (let i = 0; i < emojiss.length; i++) {
      emojiss[i].innerHTML = ''
      //emojiss[i].style.display = 'none';
      emojiss[i].classList.add('hide');
    }
    for (let i = 0; i < anchors.length; i++) {
      anchors[i].classList.remove('link-active');
    }
    e.target.style.display = 'flex';
    e.target.classList.add('link-active');
    const idname = e.target.href.split('#')[1];
    document.querySelector(`#${idname}`).classList.remove('hide')
    document.querySelector(`#${idname}`).classList.add('isActive')
    reRenderList()
  }

  for (let i = 0; i < anchors.length; i++) {
    anchors[i].addEventListener('click', updateIndicator)
  }

  //script for emoji search
  const searchBtn = document.querySelector('.emoji-footer button');
  const input = document.querySelector('.emoji-footer input')
  const cancel = document.querySelector('.cancel');
  //event for cancel button
  cancel.addEventListener('click', () => {
    for (let i = 0; i < anchors.length; i++) {
      anchors[i].classList.remove('link-active');
    }
    document.querySelector('a[href="#face"]').classList.add('link-active')
    const tabs = document.querySelectorAll('.emoji');
    input.classList.remove('input_anime')
    cancel.classList.remove('input_anime')
    document.querySelector('.tabs').style.display = 'grid';
    document.querySelector('#search').classList.remove('isActive');
    document.querySelector('#search').classList.add('hide');
    $('.emoji').html('');
    reRenderList();
    tabs.forEach(tab => {
      tab.classList.remove('hide');
    })
    document.querySelector('#face').classList.add('isActive');
  })
  searchBtn.addEventListener('click', () => {
    //hide tabs
    //add animation class to input and button
    input.classList.add('input_anime')
    cancel.classList.add('input_anime');
  })
  input.addEventListener('input', (e) => {
    const tabs = document.querySelectorAll('.emoji');
    document.querySelector('.tabs').style.display = 'none';
    document.querySelector('#face').classList.remove('isActive');
    tabs.forEach(tab => {
      tab.classList.remove('isActive');
      tab.classList.add('hide');
    })
    document.querySelector('#search.emoji').classList.remove('hide');
    document.querySelector('#search.emoji').classList.add('isActive');
    //retrieve value
    const val = e.target.value
    //get list of emojis
    let list = [...emojis];
    //initialize list with emojis whose names match
    list = list.map(emo => {
      if (emo.name.search(val) !== -1) {
        return emo.code
       }
    })
    //remove undefined items from list
    list = list.filter(item => item != undefined)
    //clear the search tab body
    document.querySelector('#search.emoji').innerHTML = '';
    //set its display to grid i.e make it visible
    //add search result to search tab body
    list.forEach(item => {
      const p = document.createElement('p');
      p.innerHTML = item
      p.addEventListener('click', () => {
        insertAtCaret(p.innerHTML)
        // document.querySelector('#msg').value+= " " + p.innerHTML;
        M.textareaAutoResize(document.querySelector('#msg'));

      })
      document.querySelector('#search').style.height = '120px';
      document.querySelector('#search.emoji').append(p)
    })
  })


</script>