<script>
  const LoadRequests = (n) => {
    showIndicator();
    $('.requests-window').html('')
    fetch(`/retrieverequest?page=${n}`,{
      method:'GET',
      credentials:'include'
    })
      .then((data) => data.json())
      .then((data) => {
        hideIndicator();
        $('.requests-window')
        .append(`<div class="requests"></div>`)
       const badge = $(".req.banner");
        badge.text(parseInt(data.requestLength));
        $('.next').remove();
        $('.prev').remove();
        if(data.requests.length <=0){
          return $('.requests-window').append(
            `<div class="notfound">
              <i class="material-icons">pending</i>
              <p>No pending request found... </p>
              </div>`
          )
        }
        if(data.hasNext){
          const next = data.next
          $('.requests').append(`
          <button class="next" onclick=LoadRequests(${next})>next</button>
            `)
        }     
          if(data.hasPrev){
            const prev = data.prev
          $('.requests').append(`
          <button class="prev" onclick=LoadRequests(${prev})>prev</button.
          `)
        }
        data.requests.forEach((req) => {
          $(".requests-window").prepend(`
          <div class="chat-tile">
              <input type="hidden" class="rid" value="${req.id}"/>
              <div class="chat-details">
                <div class="chat-img">
                  <img onclick="viewUserImage('${req.view}','${Date.now()}')" src="${req.img}" alt="${req.name}"/>
                </div>
                <div class="chat-main">
                  <p class="chat-name">${req.name}</p>
                  <p class="chat-desc">${req.desc}</p>
                </div>
              </div>
              <div class="chat-controls">
                <button onclick="chatRequestHandler('${req.id}','decline')">decline</button>
                <button onclick="chatRequestHandler('${req.id}','grant')">accept</button>
                <div class="mode-label">${req.isAnonymous?'anonymous':'open user'}</div>  
              </div>
            </div>`);
        });
      });
  };
  //script for accepting and decline a chat
  const chatRequestHandler = (id, state) => {
    const token = $('input[name="_csrf"]').val();
    showIndicator()
    fetch("/chatrequest", {
      method: "POST",
      credentials:'include',
      headers: {
        "csrf-token": token,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        id: id,
        state: state,
      }),
    })
      .then((res) => res.json())
      .then((res) => {
        hideIndicator()
         if (res.code === 300){
          return showToast('already friends')
        } 
        const rids = $(".rid");
        const badge = $(".req.banner");
        badge.text(res.newchat.nreq);
        for (let i = 0; i < rids.length; i++) {
          if (rids[i].value.toString() === res.newchat._id) {
            const parent = rids[i].parentNode.parentNode;
            parent.removeChild(rids[i].parentNode);
            const nchild = document.querySelector('.requests-window').childElementCount
            if(nchild <= 0){
              $('.requests-window').append(
            `<div class="notfound">
              <i class="material-icons">pending</i>
              <p>No pending request found... </p>
              </div>`)
            }
          } else continue;
        }
        if(!res.newchat.nreq > 0){
          $('.requests-window').append(
            `<div class="notfound">
              <i class="material-icons">pending</i>
              <p>No pending request found... </p>
              </div>`)
        }
        if (res.code === 301) {
          return;
        }
        else {
          $('.chats .notfound').remove()
          $(".chats").prepend(`  
          <div class="chat-tile" style="background-color:${res.newchat.isNew ? 'white' : 'transparent' }">
        <input class="chatids" type="hidden"  value="${res.newchat._id}"/>
              <div class="chat-details">
                <div class="chat-img">
                  <div class="indicators" style="background-color:${ res.newchat.status === 'online' ||res.newchat.anStatus === 'online'  ? 'rebeccapurple' : 'grey' }"></div>
                  <img src="${res.newchat.img}" alt="${res.newchat.name}"/>
                </div>
                <div class="chat-main">
                  <a class="chat-name" href="/chat/${res.newchat._id}" >
                   ${ res.newchat.name} </a>
                  <p class="chat-desc">
                    say hi to ${res.newchat.name}
                    </p>
                </div>
              </div>
              <div class="chat-controls">
                <small class="time"></small>
              </div>
            </div>        
          `);
          const nDm = $('.dm.banner').text()
          const newDm = parseInt(nDm) + 1;
          $('.dm.banner').text(newDm);
          showToast('chat accepted')
        }
      });
  };
</script>
<script>
  let Feedpage = 1
  let Feedheight = 0
  //const feedWindow = $('.feeds')
const loadFeed = () => {
  if(Feedpage == -1) return
  else if ((feedWindow.scrollTop === 0 || Feedpage == 1)) {
   showIndicator()
    Feedheight = feedWindow.scrollHeight;
    fetch(`/retrievefeeds?page=${Feedpage}`, {
      method: 'GET',
      credentials:'include',
      headers: {
        "csrf-token": document.querySelector('input[name="_csrf"]').value,
        "Content-Type": 'application/json'
      },
    })
      .then(res => res.json())
      .then(res => {
        hideIndicator()
        //$('.notfound.feed').remove()
       // $('.loader').css('display','none')
        Feedpage = res.hasNext ? res.next : -1;
        if(res.code === 301){
          Feedpage = -1
          //section.scrollTop = 0
          return
        }
        else if (res.feeds.length > 0) {
          const total = res.total
          res.feeds.forEach((msg, i) => {
            $('.feeds-window').prepend(
            `
            <div class="feedcard z-depth-1">
                  <div class="feed-title">
                    <p>Message:</p>
                  </div>
                  <div class="card-body">
                    <p>${msg.message}</p>
                  </div>
                  <div class="card-footer"><small>${total - i}</small>
                     <i>sent: ${msg.time}</i></div>
                </div> `)
          })
          feedWindow.scrollTop = feedWindow.scrollHeight - Feedheight;
          
        }else if(res.feeds.length <=0){
         return $('.feeds-window').append(`
         <div class="notfound">
            <i class="material-icons">portable_wifi_off </i>
            <p>No Feed found!!! </p>
            </div>
          `)
        }
      }).catch(err=>{
      })

  }
}
</script>
<script>
  //script for search mechanism
  const search = () =>{
    const searchKey = $('.search-box').val();
    //$('.search-loader').css('display','block');
    showIndicator();
    $('.results').html('')
    fetch(`/searchuser`, {
          method: 'POST',
          credentials:'include',
          headers: {
            "csrf-token": document.querySelector('input[name="_csrf"]').value,
            "Content-Type": 'application/json'
          },
          body: JSON.stringify({
            searchKey:searchKey
          })
        })
        .then(res=>res.json())
        .then(res=>{
          hideIndicator();
          //$('.search-loader').css('display','none');
          if(res.code === 400){
            $('.results').html('')
            return $('.results').append(`
            <div class="notfound">
                <i class="material-icons search-pre">search_off</i>
                <p>Opps ${res.message}!!!</p>
              </div>
            `)
          }else if(!res.result.length){
            return $('.results').append(`
            <div class="notfound">
                <i class="material-icons search-pre">search_off</i>
                <p>Opps no user was found!!!</p>
              </div>
            `) 
          }
          //$('.searchResult').html('');
          //$('.searchResult.large').html('');
          if(res.result.length > 0){
            $('.results').html('');
            res.result.forEach(user=>{
              if(!user.pals){
                $('.results').append(`
                <div class="chat-tile">
              <input type="hidden"/>
              <div class="chat-details">
                <div class="chat-img">
                  <img onclick="viewUserImage('${user.view}','${Date.now()}')" src="${user.img}" alt="user"/>
                </div>
                <div class="chat-main">
                  <p class="chat-name">${user.name}</p>
                  <p class="chat-desc">${user.desc}</p>
                </div>
              </div>
              <div class="chat-controls">
                <button onclick="addUser('${user.chatId}')"><i class="material-icons">add</i></button>
              </div>
            </div>
   `)
    return 
    }
   $('.results').append(`
   <div class="chat-tile">
              <input type="hidden"/>
              <div class="chat-details">
                <div class="chat-img">
                  <img onclick="viewUserImage('${user.view}','${Date.now()}')" src="${user.img}" alt="user"/>
                </div>
                <div class="chat-main">
                  <p class="chat-name">${user.name}</p>
                  <p class="chat-desc">${user.desc}</p>
                </div>
              </div>
              <div class="chat-controls">
                <a href="/chat/${user.id}"><i class="material-icons">near_me</i></a>
              </div>
            </div>
              `)   
            })
          }
        })
      }
  const addUser = (val) =>{
    $('.strings').val(val)
    joinHandler('.strings')
  }
  $('.search-btn').on('click',()=>search())
</script>
<script>
  //script for loading chats
let Chatpage = 1
let Chatheight = 0
  const loadChats = (action = '') =>{
    if(Chatpage < 1)return
    showIndicator()
    fetch(`/loadchats?page=${Chatpage}`, {
          method: 'GET',
          credentials:'include',
          headers: {
            "csrf-token": document.querySelector('input[name="_csrf"]').value,
            "Content-Type": 'application/json'
          },
        })
        .then(res=>res.json())
        .then(res=>{
          hideIndicator()
          Chatpage = res.next ? res.next : -1;
          if(res.hasNext){
            $('.loadmore').css('display','block')
          }else{
            Chatpage = -1
            $('.loadmore').remove()
          }
          if(res.chats.length <= 0 && Chatpage === 1){
           return $('.chats').append(`
           <div class="notfound">
            <i class="material-icons">sms_failed </i>
            <p>No chats found!!! </p>
            </div>
           `) 
          }         
          else if(res.chats.length <= 0 && Chatpage === -1){
           return $('.chats').append(`
           <div class="notfound">
            <i class="material-icons">sms_failed </i>
            <p>No chats found!!! </p>
            </div>
           `) 
          }
    res.chats.forEach((user,i)=>{
      $('.chats').append(`
      <div class="chat-tile" style="background-color:${user.isNew ? 'white' : 'transparent' }">
        <input class="chatids" type="hidden"  value="${user._id}"/>
              <div class="chat-details">
                <div class="chat-img">
                  <div class="indicators" style="background-color:${ user.status === 'online' || user.anStatus === 'online'  ? 'rebeccapurple' : 'grey' }"></div>
                  <img onclick="viewUserImage('${user.view}','${Date.now()}')" src="${user.img}" alt="${user.name}"/>
                </div>
                <div class="chat-main">
                  <a class="chat-name" href="/chat/${user._id}" >
                   ${( user.name)} </a>
                  <p class="chat-desc">
                     ${user.withImage ?
                      `<span class="withImage" style="display:flex;
                          align-items:center;">
                         <i class="material-icons thumbnail">insert_photos</i>${( user.message)}</span>` :
                           ( user.message)}</p>
                </div>
              </div>
              <div class="chat-controls">
                <small class="time"> ${( user.time)}</small>
                <div class="mode-label">${user.isAnonymous?'anonymous':'open user'}</div>  
                </div>
            </div>
      `)
          })
          chatWindow.scrollTop = 0;
        })
        
      }

</script>
